pipeline {
    agent any

    environment {
        GIT_REPO = 'https://github.com/vprameshdevops-source/ansible-lab.git'
        WORKSPACE_PATH = "${env.WORKSPACE}"
    }
    
    parameters {
        string(name: 'HOST_MOUNT', defaultValue: '/mnt/d/study/source/ansible-lab/jenkins/jenkins_home', description: 'Path to Jenkins Home on Host')
     }
    stages {
        
        stage('Checkout Code') {
            steps {
                echo "💼 Jenkins WORKSPACE: ${env.WORKSPACE}"
			    cleanWs()
                sh 'git config --global --add safe.directory /var/jenkins_home/workspace/ansible'
                sh '''
                echo "💻 Printing from shell:"
                echo "WORKSPACE from Jenkins: $WORKSPACE"
                '''
                // Clone directly into current workspace (default behavior)
                git branch: 'master', url: "${GIT_REPO}"
            }
        }

        stage('Validate Required Files') {
            steps {
                sh '''
                        echo "🔍 Validating required Ansible files..."
                        pwd
                        ls -lrt
                    '''
                }
            }
    
            stage('Clean Previous Docker Volumes') {
                steps {
                    sh '''
                        echo "🧹 Cleaning up previous Docker containers and volumes..."
            
                        # Calculate host path based on mounted volume
                        CONTAINER_PATH=$(pwd)
                        echo "🧭 Container path: $CONTAINER_PATH"
                        
                        # Set this manually based on your Jenkins mount setup
                        #HOST_MOUNT="/mnt/d/study/source/ansible-lab/jenkins/jenkins_home"
            
                        # Strip /var/jenkins_home and append to actual host mount path
                        HOST_PATH="${HOST_MOUNT}${CONTAINER_PATH#/var/jenkins_home}"
                        echo "📦 Calculated HOST_WORKSPACE: $HOST_PATH"
            
                        echo "HOST_WORKSPACE=$HOST_PATH" > .env
                        cat .env
            
                        docker compose --env-file .env down -v || true
                        '''
                    }
                }
        
                stage('Build & Deploy Lab') {
                    steps {
                        sh '''
        					docker compose down -v || true
                            echo "🚀 Spinning up Ansible Lab containers..."
                            cat .env
                            docker compose  --env-file .env -f 'docker-compose.yml' up -d --build
                '''
            }
        }

        stage('Run Ansible Ping') {
            steps {
                sh '''
                    echo "📜 Running Ansible ping command..."
                    docker exec ansible-control pwd
                    docker exec ansible-control ls -lrt /ansible
                    docker exec ansible-control ansible -i /ansible/inventory.ini all -m ping
                    docker exec ansible-control ansible-playbook -i /ansible/inventory.ini /ansible/playbook/playbook.yml
                '''
            }
        }
    }

    post {
        always {
            sh '''
                echo "🧼 Tearing down lab environment..."
                
            '''
        }
    }
}
